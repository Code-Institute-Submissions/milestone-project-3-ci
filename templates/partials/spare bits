{% for page_num in recipes) %}
        {% if page_num %}
            {% if recipes.page == page_num %}
                <a class="btn btn-outline-info mb-4" href="{{ url_for('get_recipes', page=page_num) }}">{{ page_num }}</a>
            {% else %}
                <a class="btn btn-info mb-4" href="{{ url_for('get_recipes', page=page_num) }}">{{ page_num }}</a>
            {% endif %}
        {% else %}
            ...
        {% endif %}
    {% endfor %}

<!--{% for page in dessert.pages(left_edge=1, right_edge=1, left_current=1, right_current=2) %}
            {% if page %}
                {% if dessert.page == page %}
                    <a class="btn btn-info mb-4" href="{{ url_for('get_recipes', username=user.username, page=page) }}">{{ page }}</a>
                {% else %}
                    <a class="btn btn-outline-info mb-4" href="{{ url_for('get_recipes', username=user.username, page=page) }}">{{ page }}</a>
                {% endif %}
            {% else %}
                ...
            {% endif %}
         {% endfor %}-->

    ### 
     int(request.args.get('offset')) if request.args.get('offset') else 1
    limit = int(request.args.get('limit')) if request.args.get('offset') else 6
    page = int(request.args.get('page', 2))
    total = mongo.db.desserts.count()
    per_page = limit
    offset = 0 #get_page_items
    #pagination_recipes = paginate_recipes(offset=offset, per_page=per_page)
    pagination = get_pagination(page=page,
                            per_page=per_page,   #results per page
                            total=total,         #total number of results 
                            format_total=True,   #format total. example 1,024
                            format_number=True,  #turn on format flag
                            record_name='repositories', #provide context
                            )

    starting_id = dessert.find().sort('_id', pymongo.ASCENDING)
    last_id = starting_id[offset]['_id']
    
    next_url='/recipes?limit=' + str(limit) + '&offset=' + str(offset + limit)
    prev_url='/recipes?limit=' + str(limit) + '&offset=' + str(offset - limit)

    pagination = Pagination(page=page,limit=limit)